---
import Head from "@components/_head.astro";
import Footer from "@components/dashboard/_footer.astro";
import Topbar from "@components/dashboard/_topbar.astro";
import Sidenav from "@components/dashboard/_sidenav.astro";
import Scripts from "@components/_scripts.astro";

const title = "QNAP | Monitoring System";
const path = "../../dist";
const mainPage = "dashboard";
const page = "index";

// fetch newest price records from API
let records = [];
try {
  const apiBaseUrl = import.meta.env.PUBLIC_API_BASE;
  const response = await fetch(`${apiBaseUrl}/get_price_records.php`);
  const data = await response.json();
  records = data.records || [];
} catch (error) {
  console.error("Error:", error);
}

---

<!doctype html>
<html lang="en">
  <!--begin::Head-->
  <head>
    <Head title={title} path={path} />

    <!-- apexcharts -->
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/apexcharts@3.37.1/dist/apexcharts.css"
      integrity="sha256-4MX+61mt9NVvvuPjUWdUdyfZfxSB1/Rf9WtqRHgG5S0="
      crossorigin="anonymous"
    />

    <!-- jsvectormap -->
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/jsvectormap@1.5.3/dist/css/jsvectormap.min.css"
      integrity="sha256-+uGLJmmTKOqBr+2E6KDYs/NRsHxSkONXFHUL0fy2O/4="
      crossorigin="anonymous"
    />
  </head>
  <!--end::Head-->
  <!--begin::Body-->
  <body class="layout-fixed sidebar-expand-lg bg-body-tertiary">
    <!--begin::App Wrapper-->
    <div class="app-wrapper">
      <Topbar path={path} />
      <Sidenav path={path} mainPage={mainPage} page={page} />
      <!--begin::App Main-->
      <main class="app-main">
        <!--begin::App Content Header-->
        <div class="app-content-header">
          <!--begin::Container-->
          <div class="container-fluid">
            <!--begin::Row-->
            <div class="row">
              <div class="col-sm-6">
                <h3 class="mb-0">Price Records</h3>
              </div>
              <div class="col-sm-6">
                <ol class="breadcrumb float-sm-end">
                  <li class="breadcrumb-item"><a href="#">Home</a></li>
                  <li class="breadcrumb-item active" aria-current="page">
                    Price_records
                  </li>
                </ol>
              </div>
            </div>
            <!--end::Row-->
          </div>
          <!--end::Container-->
        </div>
        <!--end::App Content Header-->
        <!--begin::App Content-->
        <div class="app-content">
          <!--begin::Container-->
          <div class="container-fluid">
            <!--begin::Card-->
            <div class="card">
              <div class="card-header">
                <h3 class="card-title">Monitoring Data</h3>
              </div>
              <div class="card-body">
                <div class="table-responsive">
                  <table class="table table-bordered table-striped">
                    <thead>
                      <tr>
                        <th>ID</th>
                        <th>Device Name</th>
                        <th>Status</th>
                        <th>CPU Usage</th>
                        <th>Memory Usage</th>
                        <th>Disk Usage</th>
                        <th>Last Update</th>
                        <th>Actions</th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr>
                        <td>001</td>
                        <td>Server Alpha</td>
                        <td><span class="badge bg-success">Online</span></td>
                        <td>45%</td>
                        <td>2.1 GB / 8 GB</td>
                        <td>120 GB / 500 GB</td>
                        <td>2023-05-12 14:23:45</td>
                        <td>
                          <button class="btn btn-sm btn-primary">View</button>
                          <button class="btn btn-sm btn-warning">Edit</button>
                        </td>
                      </tr>
                      <tr>
                        <td>002</td>
                        <td>Server Beta</td>
                        <td><span class="badge bg-success">Online</span></td>
                        <td>26%</td>
                        <td>1.8 GB / 4 GB</td>
                        <td>89 GB / 250 GB</td>
                        <td>2023-05-12 14:22:30</td>
                        <td>
                          <button class="btn btn-sm btn-primary">View</button>
                          <button class="btn btn-sm btn-warning">Edit</button>
                        </td>
                      </tr>
                      <tr>
                        <td>003</td>
                        <td>Server Gamma</td>
                        <td><span class="badge bg-danger">Offline</span></td>
                        <td>0%</td>
                        <td>0 GB / 16 GB</td>
                        <td>234 GB / 1 TB</td>
                        <td>2023-05-11 23:45:12</td>
                        <td>
                          <button class="btn btn-sm btn-primary">View</button>
                          <button class="btn btn-sm btn-warning">Edit</button>
                        </td>
                      </tr>
                      <tr>
                        <td>004</td>
                        <td>Server Delta</td>
                        <td><span class="badge bg-warning">Warning</span></td>
                        <td>78%</td>
                        <td>7.2 GB / 8 GB</td>
                        <td>450 GB / 500 GB</td>
                        <td>2023-05-12 14:20:11</td>
                        <td>
                          <button class="btn btn-sm btn-primary">View</button>
                          <button class="btn btn-sm btn-warning">Edit</button>
                        </td>
                      </tr>
                      <tr>
                        <td>005</td>
                        <td>Server Epsilon</td>
                        <td><span class="badge bg-success">Online</span></td>
                        <td>12%</td>
                        <td>4.3 GB / 32 GB</td>
                        <td>567 GB / 2 TB</td>
                        <td>2023-05-12 14:19:55</td>
                        <td>
                          <button class="btn btn-sm btn-primary">View</button>
                          <button class="btn btn-sm btn-warning">Edit</button>
                        </td>
                      </tr>
                    </tbody>
                  </table>
                </div>
              </div>
              <div class="card-footer">
                <nav aria-label="Page navigation">
                  <ul class="pagination justify-content-center">
                    <li class="page-item disabled">
                      <a class="page-link" href="#" tabindex="-1">Previous</a>
                    </li>
                    <li class="page-item active"><a class="page-link" href="#">1</a></li>
                    <li class="page-item"><a class="page-link" href="#">2</a></li>
                    <li class="page-item"><a class="page-link" href="#">3</a></li>
                    <li class="page-item">
                      <a class="page-link" href="#">Next</a>
                    </li>
                  </ul>
                </nav>
              </div>
            </div>
            <!--end::Card-->
          </div>
          <!--end::Container-->
        </div>
        <!--end::App Content-->
      </main>
      <!--end::App Main-->
      <Footer />
    </div>
    <!--end::App Wrapper-->
    <!--begin::Script-->
    <Scripts path={path} />

    <!-- OPTIONAL SCRIPTS -->

    <!-- sortablejs -->
    <script
      src="https://cdn.jsdelivr.net/npm/sortablejs@1.15.0/Sortable.min.js"
      integrity="sha256-ipiJrswvAR4VAx/th+6zWsdeYmVae0iJuiR+6OqHJHQ="
      crossorigin="anonymous"></script>

    <!-- sortablejs -->
    <script is:inline>
      const connectedSortables =
        document.querySelectorAll(".connectedSortable");
      connectedSortables.forEach((connectedSortable) => {
        let sortable = new Sortable(connectedSortable, {
          group: "shared",
          handle: ".card-header",
        });
      });

      const cardHeaders = document.querySelectorAll(
        ".connectedSortable .card-header",
      );
      cardHeaders.forEach((cardHeader) => {
        cardHeader.style.cursor = "move";
      });
    </script>

    <!-- apexcharts -->
    <script
      src="https://cdn.jsdelivr.net/npm/apexcharts@3.37.1/dist/apexcharts.min.js"
      integrity="sha256-+vh8GkaU7C9/wbSLIcwq82tQ2wTf44aOHA8HlBMwRI8="
      crossorigin="anonymous"></script>

    <!-- jsvectormap -->
    <script
      src="https://cdn.jsdelivr.net/npm/jsvectormap@1.5.3/dist/js/jsvectormap.min.js"
      integrity="sha256-/t1nN2956BT869E6H4V1dnt0X5pAQHPytli+1nTZm2Y="
      crossorigin="anonymous"></script>
    <script
      src="https://cdn.jsdelivr.net/npm/jsvectormap@1.5.3/dist/maps/world.js"
      integrity="sha256-XPpPaZlU8S/HWf7FZLAncLg2SAkP8ScUTII89x9D3lY="
      crossorigin="anonymous"></script>
    <!--end::Script-->
  </body><!--end::Body-->
</html>
